@using ViciBuzzDriverApp.Models;
@model RequestOrderViewModel;
@{
    ViewBag.Title = "Create New Order - MVC";

}
<style>
    #map {
  height: 400px;
  /* The height is 400 pixels */
  width: 100%;
  /* The width is the width of the web page */
}
</style>
 <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBuo1Q1YmWLYhLybQ2hUb6ogiuipOipCfg&callback=initMap&v=weekly"
      defer
    ></script>
 
 @* <script
      src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBuo1Q1YmWLYhLybQ2hUb6ogiuipOipCfg&callback=initMap&v=weekly"
      defer
    ></script>*@
<h2>Create New Orders</h2>
<div id="map"></div>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })

                    </div>
                </div>

                <div class="form-group">
            @Html.LabelFor(model => model.Discription, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                @Html.EditorFor(model => model.Discription, new { htmlAttributes = new { @class = "form-control" } })

                    </div>
                </div>
                    <div class="form-group">
            @Html.LabelFor(model => model.PickUpFrom, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                @Html.EditorFor(model => model.PickUpFrom, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                        <div class="form-group">
            @Html.LabelFor(model => model.DeliverTo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                @Html.EditorFor(model => model.DeliverTo, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>
                         @*<div class="form-group">
            @Html.LabelFor(model => model.MadeBy, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                @Html.EditorFor(model => model.MadeBy, new { htmlAttributes = new { @class = "form-control" } })

                            </div>
                        </div>*@
                       
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
    // Initialize and add the map
function initMap() {
  // The location of Uluru
  const myLatlng = { lat: 24.579, lng: 80.832 };
  // The map, centered at Uluru
  const map = new google.maps.Map(document.getElementById("map"), {
    zoom: 12,
    center: myLatlng,
  });

  
  // The marker, positioned at Uluru
  const marker = new google.maps.Marker({
    position: myLatlng,
    map: map,
  });
}
declare global {
  interface Window {
    initMap: () => void;
  }
}


window.initMap = initMap;


</script>


